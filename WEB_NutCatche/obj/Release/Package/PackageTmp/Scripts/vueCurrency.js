/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/vue-currency-input@1.17.1/dist/vue-currency-input.umd.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? t(exports, require("vue")) : "function" == typeof define && define.amd ? define(["exports", "vue"], t) : t((e = e || self).VueCurrencyInput = {}, e.Vue) }(this, function (e, t) { "use strict"; t = t && t.hasOwnProperty("default") ? t.default : t; var i = function (e) { var t = e.format(123456), i = e.format(-1), n = (t.match(/0/g) || []).length > 0, r = n ? t.substr(t.indexOf("6") + 1, 1) : null; return { prefix: t.substring(0, t.indexOf("1")), negativePrefix: i.substring(0, i.indexOf("1")), suffix: t.substring(t.lastIndexOf(n ? "0" : "6") + 1), groupingSymbol: t.substr(t.indexOf("3") + 1, 1), decimalSymbol: r } }; function n(e) { var t, n = e.locale, r = e.currency, u = e.precision, o = e.autoDecimalMode, a = e.valueAsInteger, l = 2, c = 2; "number" == typeof u ? l = c = u : "object" != typeof u || o || a || (l = u.min || 0, c = void 0 !== u.max ? u.max : 20); var m = new Intl.NumberFormat(n).format(-1).charAt(0); if (null == r) t = i(new Intl.NumberFormat(n, { minimumFractionDigits: 1 })); else if ("object" == typeof r) t = Object.assign({}, i(new Intl.NumberFormat(n, { minimumFractionDigits: 1 })), { prefix: r.prefix || "", negativePrefix: "" + m + (r.prefix || ""), suffix: r.suffix || "" }); else { var s = new Intl.NumberFormat(n, { currency: r, style: "currency" }); null == (t = i(s)).decimalSymbol ? l = c = 0 : void 0 === u && (l = s.resolvedOptions().minimumFractionDigits, c = s.resolvedOptions().maximumFractionDigits) } return Object.assign({}, t, { minimumFractionDigits: l, maximumFractionDigits: c, minusSymbol: m }) } var r = function (e, t, i) { return t && null != e ? Number(e.toFixed(i).split(".").join("")) : e }, u = function (e, t, i) { return t && null != e ? e / Math.pow(10, i) : e }, o = function (e) { return e.replace(/^0+(0$|[^0])/, "$1") }, a = function (e) { return e.replace(/\D+/g, "") }, l = function (e, t) { return (e.match(new RegExp("\\" + t, "g")) || []).length }, c = function (e, t, i, n) { var r = t.prefix, u = t.negativePrefix, o = t.suffix; return n && (r = o = "", u = t.minusSymbol), "" + (i ? u : r) + e + o }, m = function (e, t) { var i = t.prefix, n = t.suffix; return e.replace(i, "").replace(n, "") }, s = function (e) { return e.replace(new RegExp("^" + ["−", "-", "‐"].join("|"), "g"), "-") }, f = function (e) { return "-" === s(e).charAt(0) }, d = function (e) { return s(e).match(new RegExp("^-?\\d+(\\.\\d+)?$")) }; function v(e, t, i) { if (void 0 === i && (i = !1), "string" == typeof e) { if (d(e)) return r(Number(e), i, t.minimumFractionDigits); var n = m(e, t).split(t.decimalSymbol); if (n.length > 2) return null; var u = n[0].replace(new RegExp("\\" + t.groupingSymbol, "g"), ""); if (!d(u)) return null; var o = u; if (2 === n.length) { var a = n[1]; if (a.length && !a.match(/^\d+$/g)) return null; o += "." + a } return r(Number(s(o)), i, t.minimumFractionDigits) } return null } function g(e, t, i) { var n = document.createEvent("CustomEvent"); n.initCustomEvent(t, !0, !0, i), e.dispatchEvent(n) } var p = { locale: void 0, currency: "EUR", valueAsInteger: !1, distractionFree: !0, precision: void 0, autoDecimalMode: !1, valueRange: void 0, allowNegative: !0 }, b = function (e, t) { return v(e, n(Object.assign({}, p, t)), t.valueAsInteger) }, y = function (e, t) { return g(e, "format", { value: t }) }, h = function (e, t) { return e.setSelectionRange(t, t) }, x = function (e, t) { var i, n, r = t.decimalSymbol, u = t.groupingSymbol, o = e.split(r); return n = r, (i = e).substring(i.length - n.length, i.length) === n && 2 === o.length && function (e, t) { return e.match(new RegExp("^(0|[1-9]\\d{0,2}(\\" + t + "?\\d{3})*)$")) }(o[0], u) }, F = function (e, t, i, n, r) { var u, o = n.negativePrefix, l = n.decimalSymbol, m = n.maximumFractionDigits; if ("" === e && t && i !== (r ? n.minusSymbol : o)) return c("", n, t, r); if (m > 0) { if (x(e, n)) return c(e, n, t, r); if (u = l, e.substring(0, u.length) === u) return c("0" + l + a(e.substr(1)).substr(0, m), n, t, r) } return null }, D = function (e, t, i, n) { if (void 0 === n && (n = !0), "" === e) return { conformedValue: "" }; var r = f(e) && n, u = n && "-" === e ? -0 : Number((r ? "-" : "") + o(a(e))) / Math.pow(10, i); return { conformedValue: u, fractionDigits: u.toFixed(i).slice(-i) } }; var $ = function (e, t) { if (e === t) return !0; if (!e || !t || "object" != typeof e || "object" != typeof t) return !1; var i = Object.keys(e); return i.length === Object.keys(t).length && (!!i.every(Object.prototype.hasOwnProperty.bind(t)) && i.every(function (i) { return $(e[i], t[i]) })) }, V = function (e, t, i) { var r = i.$CI_DEFAULT_OPTIONS, u = "input" === e.tagName.toLowerCase() ? e : e.querySelector("input"); if (!u) throw new Error("No input element found"); var o = Object.assign({}, r || p, t), a = o.distractionFree, l = o.autoDecimalMode; "boolean" == typeof a && (o.distractionFree = { hideCurrencySymbol: a, hideNegligibleDecimalDigits: a, hideGroupingSymbol: a }), l ? (o.distractionFree.hideNegligibleDecimalDigits = !1, u.setAttribute("inputmode", "numeric")) : u.setAttribute("inputmode", "decimal"); var c = n(o); return u.$ci = Object.assign({}, u.$ci || {}, { options: o, currencyFormat: c }), u }, O = function (e, t, i) { var n = e.$ci.options, u = n.valueRange, o = n.locale, a = n.valueAsInteger, l = e.$ci.currencyFormat, c = l.maximumFractionDigits, m = l.minimumFractionDigits; null != t && (t = function (e, t) { if (t) { var i = t.min, n = t.max; void 0 !== i && e < i && (e = i), void 0 !== n && e > n && (e = n) } return e }(t, u), t = new Intl.NumberFormat(o, { minimumFractionDigits: m, maximumFractionDigits: c }).format(t)), w(e, t), i && g(e, "change", { numberValue: r(e.$ci.numberValue, a, c) }) }, S = function (e, t, i) { if (void 0 === i && (i = !1), null != t) { var n = e.$ci, r = n.focus, u = n.options, l = u.allowNegative, s = u.autoDecimalMode, g = u.distractionFree, p = u.locale, b = n.currencyFormat, y = n.previousConformedValue, h = r && g.hideCurrencySymbol, x = function (e, t, i, n, r, u) { if (void 0 === i && (i = ""), void 0 === n && (n = !1), void 0 === r && (r = !1), void 0 === u && (u = !0), "string" == typeof e) { var l = m(e, t); if (t.minimumFractionDigits > 0 && r) return D(l, i, t.minimumFractionDigits, u); var c = f(l); c && (l = l.substring(1), c &= u); var s = F(l, c, i, t, n); if (null != s) return { conformedValue: s }; var v = l.split(t.decimalSymbol), g = v[0], p = v.slice(1), b = o(a(g)), y = a(p.join("")).substr(0, t.maximumFractionDigits), h = p.length > 0 && 0 === y.length, x = "" === b && c && (i === e.slice(0, -1) || i !== t.negativePrefix); return h || x ? { conformedValue: i } : d(b) ? { conformedValue: Number((c ? "-" : "") + b + "." + y), fractionDigits: y } : { conformedValue: "" } } return { conformedValue: i } }(t, b, y, h, s, l), $ = x.conformedValue, V = x.fractionDigits; if ("number" == typeof $) { var O = b.maximumFractionDigits, S = b.minimumFractionDigits; r && (S = O), S = i ? V.replace(/0+$/, "").length : Math.min(S, V.length); var w = new Intl.NumberFormat(p, { useGrouping: !(r && g.hideGroupingSymbol), minimumFractionDigits: S, maximumFractionDigits: O }).format(Math.abs($)), j = 0 === $ && 1 / $ < 0; e.value = c(w, b, j || $ < 0, h), e.$ci.numberValue = $ } else e.value = $, e.$ci.numberValue = v(e.value, b) } else e.value = e.$ci.numberValue = null; e.$ci.previousConformedValue = e.value }, w = function (e, t, i) { void 0 === i && (i = !1), S(e, t, i); var n = e.$ci, u = n.numberValue, o = n.currencyFormat, a = n.options; g(e, "input", { numberValue: u = r(u, a.valueAsInteger, o.maximumFractionDigits) }) }, j = function (e) { e.addEventListener("input", function (t) { if (!t.detail) { var i = e.value, n = e.selectionStart, r = e.$ci, u = r.currencyFormat, o = r.options; w(e, i), e.$ci.focus && h(e, function (e, t, i, n, r) { var u = n.prefix, o = n.suffix, c = n.decimalSymbol, m = n.maximumFractionDigits, s = n.groupingSymbol, f = t.indexOf(c) + 1, d = t.length - i; return Math.abs(e.length - t.length) > 1 && i <= f ? e.indexOf(c) + 1 : e.substr(i, 1) === s && l(e, s) === l(t, s) + 1 ? e.length - d - 1 : (!r.autoDecimalMode && 0 !== f && i > f && a(t.substr(f)).length - 1 === m && (d -= 1), r.distractionFree.hideCurrencySymbol ? e.length - d : Math.max(e.length - Math.max(d, o.length), 0 === u.length ? 0 : u.length + 1)) }(e.value, i, n, u, o)) } }, { capture: !0 }), e.addEventListener("format", function (t) { var i = e.$ci, n = i.currencyFormat, r = i.options, o = i.numberValue, a = u(t.detail.value, r.valueAsInteger, n.maximumFractionDigits); a !== o && O(e, a) }), e.addEventListener("focus", function () { e.$ci.oldValue = e.$ci.numberValue, e.$ci.focus = !0; var t = e.$ci.options.distractionFree, i = t.hideCurrencySymbol, n = t.hideGroupingSymbol, r = t.hideNegligibleDecimalDigits; (i || n || r) && setTimeout(function () { var t = e.value, i = e.selectionStart, n = e.selectionEnd; w(e, e.value, r), Math.abs(i - n) > 0 ? e.setSelectionRange(0, e.value.length) : h(e, function (e, t, i, n) { var r = n; return t.distractionFree.hideCurrencySymbol && (r -= e.prefix.length), t.distractionFree.hideGroupingSymbol && (r -= l(i.substring(0, n), e.groupingSymbol)), Math.max(0, r) }(e.$ci.currencyFormat, e.$ci.options, t, i)) }) }), e.addEventListener("blur", function () { e.$ci.focus = !1, O(e, e.$ci.numberValue, e.$ci.oldValue !== e.$ci.numberValue) }) }, I = { bind: function (e, i, n) { var r = i.value, o = n.context, a = V(e, r, o); t.nextTick(function () { var e = a.value, t = a.$ci, i = t.currencyFormat, n = t.options; e && O(a, u(v(e, i), n.valueAsInteger, i.maximumFractionDigits)) }), j(a) }, componentUpdated: function (e, t, i) { var n = t.value, r = t.oldValue, u = i.context; if (!$(n, r)) { var o = V(e, n, u); O(o, o.$ci.numberValue, n.valueAsInteger !== r.valueAsInteger) } } }, N = { render: function (e) { var t = this; return e("input", { domProps: { value: this.formattedValue }, directives: [{ name: "currency", value: this.options }], on: Object.assign({}, this.$listeners, { change: function (e) { e.detail && t.$emit("change", e.detail.numberValue), t.formattedValue = t.$el.value }, input: function (e) { e.detail && t.value !== e.detail.numberValue && t.$emit("input", e.detail.numberValue), t.formattedValue = t.$el.value } }) }) }, directives: { currency: I }, name: "CurrencyInput", props: { value: { type: Number, default: null }, locale: { type: String, default: void 0 }, currency: { type: [String, Object], default: void 0 }, distractionFree: { type: [Boolean, Object], default: void 0 }, precision: { type: [Number, Object], default: void 0 }, autoDecimalMode: { type: Boolean, default: void 0 }, valueAsInteger: { type: Boolean, default: void 0 }, valueRange: { type: Object, default: void 0 }, allowNegative: { type: Boolean, default: void 0 } }, data: function () { return { formattedValue: this.value } }, computed: { options: function () { var e = this, t = Object.assign({}, this.$CI_DEFAULT_OPTIONS || p); return Object.keys(p).forEach(function (i) { void 0 !== e[i] && (t[i] = e[i]) }), t } }, watch: { value: "setValue" }, methods: { setValue: function (e) { y(this.$el, e) } } }, E = { install: function (e, t) { void 0 === t && (t = {}); var i = t.componentName; void 0 === i && (i = N.name); var n = t.directiveName; void 0 === n && (n = "currency"); var r = t.globalOptions; void 0 === r && (r = {}), e.prototype.$CI_DEFAULT_OPTIONS = Object.assign({}, p, r), e.component(i, N), e.directive(n, I), e.prototype.$parseCurrency = function (e, t) { return void 0 === t && (t = {}), b(e, Object.assign({}, r, t)) } } }; "undefined" != typeof window && window.Vue && window.Vue.use(E), e.CurrencyDirective = I, e.CurrencyInput = N, e.default = E, e.parseCurrency = b, e.setValue = y, Object.defineProperty(e, "__esModule", { value: !0 }) });
//# sourceMappingURL=/sm/1db4842167d70345b1172df88c42ae9915345efbd98b6bef3d2a24cc24b772b9.map