@{
    ViewBag.Title = "Cadastro de Correspondencia";
}
<div class="row" id="formCorresp" style="line-height:1.5 !important "  >
        <div class="col-md-1"> </div>
        <div class="col-md-10" style="min-height:800px">
            <button type="button" class="btn btn-AenaBlue btn-lg btn-block" id="Cabecalho">CADASTRO DE CORRESPONDÊNCIA</button>
            <div id="error">
                <a href="~/Error" ref="error"></a>
            </div>
		    <div id="entrar">
              <a href="~/Consulta" ref="enter"></a>
			</div>
            <div class="row " style="margin-top:10px;margin-bottom:10px" > 
		
                <label class="checkbox-label">
                    <input type="radio" id="checkboxOrcamento" value="1" v-on:click="mudarTipo(1)"  v-model="corresp.tipoCorrespondencia">
                    <span class="checkbox-custom circular" style="margin-top:15%"></span>
                    <label for="1" style="margin-left: 30px;  margin-top: 2px;">Entrada</label>
                </label>

                <label class="checkbox-label">
                    <input type="radio" id="checkboxOrcamento" value="2" v-on:click="mudarTipo(2)" v-model="corresp.tipoCorrespondencia">
                    <span class="checkbox-custom circular" style="margin-top:15%"></span>
                    <label for="2" style=" margin-left: 30px;  margin-top: 2px;">Saída</label>
                </label>
            </div> 
            <!-- <div v-else> -->
                 <!-- <h3 style="color:#96CE00;text-align:center"> Correspondência de Saída</h3> -->
            <!-- </div> -->
            <div v-if="corresp.tipoCorrespondencia">


                <div class="row" style="margin-bottom:10px">
                    <div class="col-md-2"> </div>
                    <div class="form-group col-md-12">

                        <div class="col-sm-6" style="float:left;padding-left:0px;">
                            <div v-if="corresp.tipoCorrespondencia == '2'">
                                <small id="AeroportoHelp" class="form-text font-weight-bold">Emissor</small>
                                <select v-model="corresp.idEmissor" :disabled="hiddenEmissor" class="form-control">
                                    <option v-for="option in areas" v-bind:value="option.idArea">
                                        {{ option.descricao }}
                                    </option>
                                </select>
                            </div>
                            <div v-else>
                                <small id="EmissoHelp" class="form-text font-weight-bold">Emissor</small>
                                <select v-model="corresp.idEmissor" :disabled="hiddenEmissor" class="form-control">
                                    <option v-for="option in empresas" v-bind:value="option.idEmpresa">
                                        {{ option.descricao }}
                                    </option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6" style="float:left;padding-left:0px;padding-right:0px !important">
                            <div v-if="corresp.tipoCorrespondencia == '2'">
                                <small id="DestinatarioHelpSaida" class="form-text font-weight-bold">Destinatário</small>
                                <select v-model="corresp.idDestinatario" :disabled="hiddenDestinatario"  class="form-control">
                                    <option v-for="option in empresas" v-bind:value="option.idEmpresa">
                                        {{ option.descricao }}
                                    </option>
                                </select>
                            </div>
                            <div v-else>
                                <small id="DestinatarioHelpEntrada" class="form-text font-weight-bold">Destinatário</small>
                                <select v-model="corresp.idDestinatario" :disabled="hiddenDestinatario"  class="form-control">
                                    <option v-for="option in areas" v-bind:value="option.idArea">
                                        {{ option.descricao }}
                                    </option>
                                </select>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-2"> </div>
                </div>
                <div class="row space">
                    <div class="col-md-2"> </div>
                    <div class="form-group col-md-12">
                        <div class="col-sm-6" style="float:left;padding-left:0px;" v-if="corresp.tipoCorrespondencia == 1">
                            <small id="nCartaHelp" class="form-text font-weight-bold">Número Ofício(Opcional)</small>
                            <div class="form-group">
                                <input class="form-control" v-model="corresp.numeroOficio" />
                            </div>
                        </div>
                        <div v-else class="col-sm-6" style="float:left;padding-left:0px;">
                            <small id="FormaEnvio" class="form-text font-weight-bold">Forma de Envio</small>
                            <select v-model="corresp.formaEnvio" class="form-control" placeholder="Selecione uma forma de Envio">
                                <option value="Email">Email</option>
                                <option value="Carta">Carta</option>
                                <option value="Sei Anac">SEI ANAC</option>
                                <option value="Fax">Fax</option>
                                <option value="Outros">Outros</option>
                            </select>
                        </div>
                        <div class="col-sm-6" style="float:left;padding-left:0px;padding-right:0px !important">
                            <small id="AssuntoHelp" class="form-text font-weight-bold">Assunto</small>
                            <div class="form-group">
                                <input class="form-control" v-model="corresp.assunto" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2"> </div>
                </div>
                <div class="row space">
                    <div class="col-md-2"> </div>
                    <div class="form-group col-md-12">
                        <div class="col-sm-6" style="float:left;padding-left:0px;">
                            <small id="dataCartaHelp" class="form-text font-weight-bold">Data da Carta</small>
                            <v-date-picker :mode='mode' v-model='corresp.dataCarta' />
                        </div>
                        <div class="col-sm-6" style="float:left;padding-left:0px;padding-right:0px !important" v-if="corresp.tipoCorrespondencia == 1" >
                            <small id="prazoHelp" class="form-text font-weight-bold">Prazo de Resposta Dias(Opcional)</small>
                            <div class="form-group">
                                <input type="number" min="1" class="form-control" v-model="corresp.prazoResposta" />
                            </div>
                        </div>
                        <div v-else  class="col-sm-6" style="float:left;padding-left:0px;padding-right:0px !important">
                            <small id="prazoHelp" class="form-text font-weight-bold">Resposta ao:</small>
                            <div class="form-group">
                                <select v-model="corresp.idCorrespRelacionada" class="form-control">
                                    <option v-for="option in entradas" v-bind:value="option.idCorrespondencia">
                                        {{ option.sequencialCarta + ":"  + option.assunto }}
                                    </option>
                                </select>
                            </div>
                            </div>
                        </div>
                    <div class="col-md-2"> </div>
                </div>
                @*<div class="row space" v-if="corresp.tipoCorrespondencia == '1'">
                <div class="col-md-2"> </div>
                <div class="form-group col-md-12">
                    <small id="DestinatarioHelpEntrada" class="form-text font-weight-bold">Destinatário</small>
                    <select v-model="corresp.idDestinatario" class="form-control">
                        <option v-for="option in areas" v-bind:value="option.idArea">
                            {{ option.descricao }}
                        </option>
                    </select>
                </div>
                <div class="col-md-2"> </div>
            </div>*@
                @*<div class="row space" style="margin-bottom:10px" v-if="corresp.tipoCorrespondencia == '2'">
                    <div class="col-md-2"> </div>
                    <div class="form-group col-md-12">

                    </div>
                    <div class="col-md-2"> </div>
                </div>*@
                <div class="row space">
                    <div class="col-md-2"> </div>
                    <div class="form-group col-md-12">
                        <small id="ObservacaoHelp" class="form-text font-weight-bold">Descricao</small>
                        <textarea class="form-control" rows="2" v-model="corresp.descricao" id="Observacao" placeholder="Insira sua Observação"></textarea>
                    </div>
                    <div class="col-md-2"></div>
                </div>
                <div class="row" >
                    <div class="col-md-2"></div>
                    <div class="form-group col-md-12" v-if="corresp.tipoCorrespondencia == '2'">
                        <label class="checkbox-label">
                            <input type="checkbox" id="checkboxOrcamento"  checked v-on:click="aprovacao($event)">
                            <span class="checkbox-custom circular" style="margin-top:15%"></span>
                        </label>
                        <label style="margin-left: 30px;  margin-top: 2px;">Necessita de Aprovação do jurídico?</label>
                    </div>
                        <div class="col-md-2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="form-group col-md-12" id="Botoes">
                            <div v-if="corresp.tipoCorrespondencia == 1">


                                <div class="col-sm-7" style="float:left;padding-left:0px;">
                                    <input type="file" style="float:left;cursor:pointer" class="btn btn-AenaGreen" accept=".pdf" v-on:change="processarArquivo($event)">
                                    <div style="float:left">
                                        <h5 style="color:#3e5c75;float:right;margin-top:5px">O formato do arquivo precisa ser um PDF!</h5>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-5" style="float:left;padding-left:0px;">
                                <button type="button" style="width:140px;margin-right:5px" v-on:click="enviar" v-if="botao" class="btn btn-AenaGreen">SALVAR</button>
                                <button type="button" style="width:140px" v-if="botao" v-on:click="limpar" class="btn btn-danger">LIMPAR</button>
                            </div>

                        </div>
                        <div class="col-md-2"> </div>
                    </div>
                </div>
        </div>
                <div class="col-md-1"></div>
            </div>
            <script>
                var Demandas = new Vue({
                    el: '#formCorresp',
                    data:
                    {
                        corresp: {
                            idCorrespondencia: 0,
                            tipoCorrespondencia: 0,
                            dataCarta: null,
                            idEmissor: 0,
                            numeroOficio: null,
                            idDestinatario: 0,
                            prazoResposta: null,
                            formaEnvio: null,
                            caminhoDocumento: null,
                            descricao: null,
                            assunto: null,
                            idAcesso: 1,
                            file: null,
                            idCorrespRelacionada: null

                        },
                        usuario: null,
                        areas: [],
                        empresas: [],
                        arquivo: null,
                        mode: "single",
                        idAcesso: 0,
                        botao: true,
                        hiddenEmissor: false,
                        hiddenDestinatario: false,
                        entradas: []

                    },
                    created: function () {
                        axios({
                            method: 'get',
                            url: 'BuscarAreas',
                            data: {},
                            validateStatus: (status) => {
                                return true;
                            },
                            responseType: 'json'
                        }).then((response) => {
                            this.areas = response.data;
                        }).catch((error) => {
                            console.log(error);
                        });

                        this.idAcesso = this.autenticado;

                        axios({
                            method: 'get',
                            url: 'BuscarEmpresas',
                            data: {},
                            validateStatus: (status) => {
                                return true;
                            },
                            responseType: 'json'
                        }).then((response) => {
                            this.empresas = response.data;
                        }).catch((error) => {
                            console.log(error);
                        });



                        var self = this
                            axios({
                                method: 'get',
                                url: 'BuscarUsuario',
                                data: {},
                                validateStatus: (status) => {
                                    return true;
                                },
                                responseType: 'json'
                            }).then((response) => {
                                if (response.data != null) {
                                    self.corresp.idAcesso = response.data.idAcesso;
                                    self.usuario = response.data;
                                    self.buscarEntrada();
                                } else {
                                    self.$refs.error.click();
                                }
                            }).catch((error) => {
                                console.log(error);
                            });
                    },
                    methods:
                    {
                        processarArquivo(event) {
                            this.arquivo = event.target.files[0]
                            this.corresp.caminhoDocumento = event.target.files[0].name;
                        },  
                        buscarEntrada() {
                            var self = this;
                            axios({
                                method: 'post',
                                url: 'BuscarCorrespaEntrada',
                                data: { idAcesso: self.usuario.idAcesso },
                                validateStatus: (status) => {
                                    return true;
                                },
                                responseType: 'json'
                            }).then((response) => {
                                this.entradas = response.data;
                            }).catch((error) => {
                                console.log(error);
                            });
                        },
                        mudarTipo(value) {
                            this.corresp.status = 0;
                            if (this.usuario.idArea !== 17)
                            {

                                if (value == 1)
                                {
                                    this.hiddenEmissor = false;
                                    this.hiddenDestinatario = true;
                                    this.corresp.idDestinatario = this.usuario.idArea;
                                    this.corresp.idEmissor = 0;
                                 
                                } else
                                {
                                    this.hiddenEmissor = true;
                                    this.hiddenDestinatario = false;
                                    this.corresp.idEmissor = this.usuario.idArea;
                                    this.corresp.idDestinatario = 0;
                                    
                                }
                            } else {
                                this.hiddenEmissor = false;
                                this.hiddenDestinatario = false;
                                this.corresp.idDestinatario = 0;
                                this.corresp.idEmissor = 0;                             
                            }
                        },
                        aprovacao(e) {
                            if (e.target.checked)
                            {
                                this.corresp.status = 0;
                            } else {
                                this.corresp.status = 5;
                            }
                        },
                        enviar() {
                            this.botao = false;
                            var self = this;
							if (self.corresp.prazoResposta == null){
							   self.corresp.prazoResposta = 0 ;
							}
                            var mDados = self.corresp;
                            var xDados = JSON.stringify(this.corresp);
                            var ok = new Blob([this.arquivo], { type: 'application/pdf' });
                            var formData = new FormData();
                            formData.append('data', xDados);                            
                            formData.append('data2', ok, self.corresp.caminhoDocumento);
                            if (self.corresp.tipoCorrespondencia == 1 && self.arquivo == null) {
                                Swal.fire('Por favor preencha todos os campos necessários!', '', 'warning')
                                this.botao = true;
                            }
                            else
                            {  
                                if (this.corresp.tipoCorrespondencia == 0 || this.corresp.idEmissor == 0 || this.corresp.assunto == null || this.corresp.idDestinatario == 0 || this.corresp.dataCarta == null) {
                                    Swal.fire('Por favor preencha todos os campos necessários!', '', 'warning')
                                    this.botao = true;
                                }
                                else {
                                    axios({
                                        method: 'post',
                                        url: 'InserirCorrespondencia',
                                        //data: {
                                        //    entrada: this.corresp
                                        //},                
                                        data: formData,
                                        headers: {
                                            'Content-Type': 'multipart/form-data'
                                        },
                                        validateStatus: (status) => {
                                            return true;
                                        },
                                        responseType: 'json'
                                    }).then((response) => {
                                        if (response.data == 0 || response.data == undefined || response.data == "") {
                                            Swal.fire('Ocorreu um erro no cadastro!', '', 'error')
                                            self.botao = true;
                                        } else {
                                            //Swal.fire(response.data,
                                            //    'Foi enviado um email para o setor administrativo do sistema!',
                                            //    'success')

                                            Swal.fire('Cadastro de correspondencia realizado com sucesso!', 'Foi enviado um email para a area associada ao Email', 'success')
													.then((result) => {
													   self.$refs.enter.click();
													})
                                            self.botao = true;
                                             

                                        }
                                    }).catch((error) => {
                                        console.log(error);
                                    });
                                }
                            }               
                        },
                        limpar() {
                            this.corresp.idCorrespondencia = 0,
                            this.corresp.tipoCorrespondencia = 0,
                            this.corresp.dataCarta = null,
                            this.corresp.idEmissor = 0,
                            this.corresp.numeroOficio = null,
                            this.corresp.idDestinatario = 0,
                            this.corresp.prazoResposta = null,
                            this.corresp.formaEnvio = null,
                            this.corresp.caminhoDocumento = null,
                            this.corresp.observacao= null,
                            this.corresp.assunto= null
                                
                        }
                    }
                });
            </script>
            <style>
                #sticky-footer {
                    position: relative !important;
                }
            </style>